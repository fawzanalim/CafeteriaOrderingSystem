/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FAWZAN
 */
public class ItemWiseReport extends javax.swing.JFrame {
    DefaultTableModel table;
    /**
     * Creates new form ItemWiseReport2
     */
    public ItemWiseReport() {
        initComponents();
        jButton2ActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 150));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("RM 0.00");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 470, 250, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Grand Total:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 470, -1, -1));

        jTable1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Tender Grilled Chicken", "0", "0.00"},
                {"Steak with Fries", "0", "0.00"},
                {"Fried Salmon", "0", "0.00"},
                {"Japanese Bento Rice", "0", "0.00"},
                {"Salad", "0", "0.00"},
                {"Strawberry Smoothie", "0", "0.00"},
                {"Beef Burger", "0", "0.00"},
                {"Beef Noodle", "0", "0.00"},
                {"Japanese Noodle", "0", "0.00"},
                {"Kimchi", "0", "0.00"},
                {"Lasagna", "0", "0.00"},
                {"Coffee", "0", "0.00"},
                {"Fruit Juice", "0", "0.00"},
                {"Speghetti", "0", "0.00"},
                {"Water", "0", "0.00"},
                {"Avacado Slice", "0", "0.00"},
                {"Edamame", "0", "0.00"},
                {"Chicken Chop", "0", "0.00"},
                {"Fried Rice", "0", "0.00"},
                {"Curry Rice", "0", "0.00"},
                {"Steamed Fish", "0", "0.00"},
                {"Bowl of Strawberries", "0", "0.00"},
                {"Sushi", "0", "0.00"}
            },
            new String [] {
                "Item Name", "Item Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 840, 430));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Item Wise Report");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 900, -1));

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Filter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 530, 125, 45));

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 535, 120, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("To");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 535, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("dd/mm/yyyy");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 560, 120, -1));

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 125, 45));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 535, 120, -1));

        jCheckBox3.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Date Range");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("dd/mm/yyyy");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 560, 120, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 900, 600));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment/Pictures/zz.biscuit.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        table = (DefaultTableModel) jTable1.getModel();

        for (int i = 0; i < table.getRowCount(); i++)
        {
            table.setValueAt("0", i, 1);
            table.setValueAt("0.00", i, 2);
        }

        String date1;
        String date2;

        if (jCheckBox3.isSelected())
        {
            try
            {
                
                
                date1 = jTextField3.getText();
                date2 = jTextField4.getText();
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Please provide date range", "Date Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        }
        else
        {
            date1 = null;
            date2 = null;
        }

        try
        {
            File file = new File("files/orders.txt");
            if (file.exists())
            {
                BufferedReader data;
                data = new BufferedReader(new FileReader(file));
                String line;
                data.readLine(); // Read the header row
                while((line = data.readLine()) != null)
                {

                    String date = line.split("\t")[1];

                    String itemName = "";
                    double total = 0;
                    int itemQty = 0;
                    for (int i = 0; i < (line.split("\t").length - 9)/4; i++)
                    {
                        itemName = line.split("\t")[6+i*4];
                        itemQty = Integer.parseInt(line.split("\t")[7+i*4]);
                        total = Double.parseDouble(line.split("\t")[9+i*4]);

                        if(date1 == null && date2 == null)//amount check
                        {
                            for (int j = 0; j < table.getRowCount(); j++)
                            {
                                if (itemName.compareTo(table.getValueAt(j, 0).toString()) == 0)
                                {
                                    int oldItemQty = Integer.parseInt(table.getValueAt(j, 1).toString());
                                    double oldTotal = Double.parseDouble(table.getValueAt(j, 2).toString());
                                    table.setValueAt(itemQty + oldItemQty, j, 1);
                                    table.setValueAt(String.format("%.2f", total + oldTotal), j, 2);
                                    break;
                                }
                            }

                        }
                        else
                        {
                            try
                            {
                                Date date1New = new SimpleDateFormat("dd/MM/yyyy").parse(date1);
                                Date date2New = new SimpleDateFormat("dd/MM/yyyy").parse(date2);
                                Date orderDate = new SimpleDateFormat("dd-MMM-yyyy").parse(date);

                                if(orderDate.compareTo(date1New) >= 0 && orderDate.compareTo(date2New) <= 0)
                                {
                                    for (int j = 0; j < table.getRowCount(); j++)
                                    {
                                        if (itemName.compareTo(table.getValueAt(j, 0).toString()) == 0)
                                        {
                                            int oldItemQty = Integer.parseInt(table.getValueAt(j, 1).toString());
                                            double oldTotal = Double.parseDouble(table.getValueAt(j, 2).toString());
                                            table.setValueAt(itemQty + oldItemQty, j, 1);
                                            table.setValueAt(String.format("%.2f", total + oldTotal), j, 2);
                                            break;
                                        }
                                    }
                                }
                            }
                            catch(Exception e)
                            {
                                for (int j = 0; j < table.getRowCount(); j++)
                                {
                                    if (itemName.compareTo(table.getValueAt(j, 0).toString()) == 0)
                                    {
                                        int oldItemQty = Integer.parseInt(table.getValueAt(j, 1).toString());
                                        double oldTotal = Double.parseDouble(table.getValueAt(j, 2).toString());
                                        table.setValueAt(itemQty + oldItemQty, j, 1);
                                        table.setValueAt(String.format("%.2f", total + oldTotal), j, 2);
                                        break;
                                    }
                                }
                            }

                        }

                    }

                }
                data.close();
            }

        }
        catch(IOException e)
        {

            e.printStackTrace();
        }

        double total = 0;
        for (int i = 0; i < table.getRowCount(); i++)
        {

            total += Double.parseDouble(table.getValueAt(i, 2).toString());
        }

        jLabel4.setText("RM" + String.format("%.2f", total));
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        rightRenderer.setHorizontalAlignment( JLabel.RIGHT );
        jTable1.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        jTable1.getColumnModel().getColumn(2).setCellRenderer( rightRenderer );

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        CollectionReportGenerator crgf = new CollectionReportGenerator();
        crgf.setLocation(this.getLocation());
        crgf.setResizable(false);
        crgf.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected())
        {
            jTextField3.setEditable(true);
            jTextField4.setEditable(true);

        }
        else
        {
            jTextField3.setEditable(false);
            jTextField4.setEditable(false);

        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemWiseReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemWiseReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemWiseReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemWiseReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemWiseReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
